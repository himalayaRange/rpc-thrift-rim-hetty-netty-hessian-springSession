<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context" 
		xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx"
		xmlns:jpa="http://www.springframework.org/schema/data/jpa" xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd"
		>
	
		<description>Spring RMI Provider</description>
		
		<!--非分布式事务控制 -->
		<import resource="../applicationContext-database.xml" />
		
		<!-- 安全策略拦截器，可以配置多个地址 -->
		<bean id="securityInterceptor" class="com.github.wangyi.rmi.interceptor.SecurityInterceptor">
			<property name="allowed">
				<set>
					<value>192.168.1.176</value>
				</set>
			</property>
		</bean>
		
		<!--Spring 通过RmiServiceExporter暴露服务 -->
		<bean id="companyService" class="com.github.wangyi.rmi.support.CompanySupport"></bean>
		<bean id="companyServiceExporter" class="org.springframework.remoting.rmi.RmiServiceExporter">
			<!-- 调用service -->	
			<property name="service" ref="companyService"></property>	
			<!-- value的值给用户调用 -->
			<property name="serviceName" value="companyRmiService"></property>
			<!-- service接口-->
			<property name="serviceInterface" value="com.github.wangyi.rmi.service.CompanyService"></property>
			<!-- 注册端口号 -->
			<property name="registryPort" value="10080"></property>
			<!-- 安全策略 ，使用token拦截器-->
			<property name="interceptors">
				<list>
					<ref bean="securityInterceptor"/>
				</list>
			</property>
		</bean>
		
		<!--Spring 通过RmiServiceExporter暴露服务 -->
		<bean id="orderService" class="com.github.wangyi.thrift.simpleRpc.appchina_rpc_test.main.impl.OrderServiceImpl"></bean>
		<bean id="orderServiceExporter" class="org.springframework.remoting.rmi.RmiServiceExporter">
			<!-- 调用service -->	
			<property name="service" ref="orderService"></property>	
			<!-- value的值给用户调用 -->
			<property name="serviceName" value="orderRmiService"></property>
			<!-- service接口-->
			<property name="serviceInterface" value="com.github.wangyi.thrift.simpleRpc.appchina_rpc_test.main.api.OrderService"></property>
			<!-- 注册端口号 -->
			<property name="registryPort" value="10080"></property>
		</bean>
		
	    <!-- 使用annotation 自动注册bean,并检查@Required,@Autowired的属性已被注入 -->
		<context:component-scan base-package="com.github.wangyi">
			<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
			<context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
		</context:component-scan>
		
		<!-- 自动代理 -->
	    <aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	   
</beans>